# coding: utf-8

"""
    MBTA

    MBTA service API. https://www.mbta.com

    OpenAPI spec version: 3.0
    Contact: developer@mbta.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class AlertResourceAttributes(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'url': 'str',
        'updated_at': 'str',
        'timeframe': 'str',
        'short_header': 'str',
        'severity': 'int',
        'service_effect': 'str',
        'lifecycle': 'str',
        'informed_entity': 'list[InformedEntity]',
        'header': 'str',
        'effect_name': 'str',
        'effect': 'str',
        'description': 'str',
        'created_at': 'str',
        'cause': 'str',
        'banner': 'str',
        'active_period': 'list[ActivePeriod]'
    }

    attribute_map = {
        'url': 'url',
        'updated_at': 'updated_at',
        'timeframe': 'timeframe',
        'short_header': 'short_header',
        'severity': 'severity',
        'service_effect': 'service_effect',
        'lifecycle': 'lifecycle',
        'informed_entity': 'informed_entity',
        'header': 'header',
        'effect_name': 'effect_name',
        'effect': 'effect',
        'description': 'description',
        'created_at': 'created_at',
        'cause': 'cause',
        'banner': 'banner',
        'active_period': 'active_period'
    }

    def __init__(self, url=None, updated_at=None, timeframe=None, short_header=None, severity=None, service_effect=None, lifecycle=None, informed_entity=None, header=None, effect_name=None, effect=None, description=None, created_at=None, cause=None, banner=None, active_period=None):
        """
        AlertResourceAttributes - a model defined in Swagger
        """

        self._url = None
        self._updated_at = None
        self._timeframe = None
        self._short_header = None
        self._severity = None
        self._service_effect = None
        self._lifecycle = None
        self._informed_entity = None
        self._header = None
        self._effect_name = None
        self._effect = None
        self._description = None
        self._created_at = None
        self._cause = None
        self._banner = None
        self._active_period = None

        if url is not None:
          self.url = url
        if updated_at is not None:
          self.updated_at = updated_at
        if timeframe is not None:
          self.timeframe = timeframe
        if short_header is not None:
          self.short_header = short_header
        if severity is not None:
          self.severity = severity
        if service_effect is not None:
          self.service_effect = service_effect
        if lifecycle is not None:
          self.lifecycle = lifecycle
        if informed_entity is not None:
          self.informed_entity = informed_entity
        if header is not None:
          self.header = header
        if effect_name is not None:
          self.effect_name = effect_name
        if effect is not None:
          self.effect = effect
        if description is not None:
          self.description = description
        if created_at is not None:
          self.created_at = created_at
        if cause is not None:
          self.cause = cause
        if banner is not None:
          self.banner = banner
        if active_period is not None:
          self.active_period = active_period

    @property
    def url(self):
        """
        Gets the url of this AlertResourceAttributes.
        A URL for extra details, such as outline construction or maintenance plans.

        :return: The url of this AlertResourceAttributes.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """
        Sets the url of this AlertResourceAttributes.
        A URL for extra details, such as outline construction or maintenance plans.

        :param url: The url of this AlertResourceAttributes.
        :type: str
        """

        self._url = url

    @property
    def updated_at(self):
        """
        Gets the updated_at of this AlertResourceAttributes.
        Date/Time alert last updated

        :return: The updated_at of this AlertResourceAttributes.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """
        Sets the updated_at of this AlertResourceAttributes.
        Date/Time alert last updated

        :param updated_at: The updated_at of this AlertResourceAttributes.
        :type: str
        """

        self._updated_at = updated_at

    @property
    def timeframe(self):
        """
        Gets the timeframe of this AlertResourceAttributes.
        Summarizes when an alert is in effect.

        :return: The timeframe of this AlertResourceAttributes.
        :rtype: str
        """
        return self._timeframe

    @timeframe.setter
    def timeframe(self, timeframe):
        """
        Sets the timeframe of this AlertResourceAttributes.
        Summarizes when an alert is in effect.

        :param timeframe: The timeframe of this AlertResourceAttributes.
        :type: str
        """

        self._timeframe = timeframe

    @property
    def short_header(self):
        """
        Gets the short_header of this AlertResourceAttributes.
        A shortened version of `*/attributes/header`.

        :return: The short_header of this AlertResourceAttributes.
        :rtype: str
        """
        return self._short_header

    @short_header.setter
    def short_header(self, short_header):
        """
        Sets the short_header of this AlertResourceAttributes.
        A shortened version of `*/attributes/header`.

        :param short_header: The short_header of this AlertResourceAttributes.
        :type: str
        """

        self._short_header = short_header

    @property
    def severity(self):
        """
        Gets the severity of this AlertResourceAttributes.
        How severe the alert it from least (`0`) to most (`10`) severe.

        :return: The severity of this AlertResourceAttributes.
        :rtype: int
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """
        Sets the severity of this AlertResourceAttributes.
        How severe the alert it from least (`0`) to most (`10`) severe.

        :param severity: The severity of this AlertResourceAttributes.
        :type: int
        """
        if severity is not None and severity > 10:
            raise ValueError("Invalid value for `severity`, must be a value less than or equal to `10`")
        if severity is not None and severity < 0:
            raise ValueError("Invalid value for `severity`, must be a value greater than or equal to `0`")

        self._severity = severity

    @property
    def service_effect(self):
        """
        Gets the service_effect of this AlertResourceAttributes.
        Summarizes the service and the impact to that service.

        :return: The service_effect of this AlertResourceAttributes.
        :rtype: str
        """
        return self._service_effect

    @service_effect.setter
    def service_effect(self, service_effect):
        """
        Sets the service_effect of this AlertResourceAttributes.
        Summarizes the service and the impact to that service.

        :param service_effect: The service_effect of this AlertResourceAttributes.
        :type: str
        """

        self._service_effect = service_effect

    @property
    def lifecycle(self):
        """
        Gets the lifecycle of this AlertResourceAttributes.
        Identifies whether alert is a new or old, in effect or upcoming.  | Value                | |----------------------| | `\"NEW\"`              | | `\"ONGOING\"`          | | `\"ONGOING_UPCOMING\"` | | `\"UPCOMING\"`         |  

        :return: The lifecycle of this AlertResourceAttributes.
        :rtype: str
        """
        return self._lifecycle

    @lifecycle.setter
    def lifecycle(self, lifecycle):
        """
        Sets the lifecycle of this AlertResourceAttributes.
        Identifies whether alert is a new or old, in effect or upcoming.  | Value                | |----------------------| | `\"NEW\"`              | | `\"ONGOING\"`          | | `\"ONGOING_UPCOMING\"` | | `\"UPCOMING\"`         |  

        :param lifecycle: The lifecycle of this AlertResourceAttributes.
        :type: str
        """

        self._lifecycle = lifecycle

    @property
    def informed_entity(self):
        """
        Gets the informed_entity of this AlertResourceAttributes.
        Entities whose users we should notify of this alert.  See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `informed_entity`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert) 

        :return: The informed_entity of this AlertResourceAttributes.
        :rtype: list[InformedEntity]
        """
        return self._informed_entity

    @informed_entity.setter
    def informed_entity(self, informed_entity):
        """
        Sets the informed_entity of this AlertResourceAttributes.
        Entities whose users we should notify of this alert.  See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `informed_entity`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert) 

        :param informed_entity: The informed_entity of this AlertResourceAttributes.
        :type: list[InformedEntity]
        """

        self._informed_entity = informed_entity

    @property
    def header(self):
        """
        Gets the header of this AlertResourceAttributes.
        This plain-text string will be highlighted, for example in boldface. See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `header_text`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert) 

        :return: The header of this AlertResourceAttributes.
        :rtype: str
        """
        return self._header

    @header.setter
    def header(self, header):
        """
        Sets the header of this AlertResourceAttributes.
        This plain-text string will be highlighted, for example in boldface. See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `header_text`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert) 

        :param header: The header of this AlertResourceAttributes.
        :type: str
        """

        self._header = header

    @property
    def effect_name(self):
        """
        Gets the effect_name of this AlertResourceAttributes.
        Name of the alert

        :return: The effect_name of this AlertResourceAttributes.
        :rtype: str
        """
        return self._effect_name

    @effect_name.setter
    def effect_name(self, effect_name):
        """
        Sets the effect_name of this AlertResourceAttributes.
        Name of the alert

        :param effect_name: The effect_name of this AlertResourceAttributes.
        :type: str
        """

        self._effect_name = effect_name

    @property
    def effect(self):
        """
        Gets the effect of this AlertResourceAttributes.
        The effect of this problem on the affected entity.  | Value | |-------| | `\"ACCESS_ISSUE\"` | | `\"ADDITIONAL_SERVICE\"` | | `\"AMBER_ALERT\"` | | `\"CANCELLATION\"` | | `\"DELAY\"` | | `\"DETOUR\"` | | `\"DOCK_CLOSURE\"` | | `\"DOCK_ISSUE\"` | | `\"EXTRA_SERVICE\"` | | `\"MODIFIED_SERVICE\"` | | `\"NO_SERVICE\"` | | `\"OTHER_EFFECT\"` | | `\"POLICY_CHANGE\"` | | `\"SCHEDULE_CHANGE\"` | | `\"SERVICE_CHANGE\"` | | `\"SHUTTLE\"` | | `\"SNOW_ROUTE\"` | | `\"STATION_CLOSURE\"` | | `\"STATION_ISSUE\"` | | `\"STOP_CLOSURE\"` | | `\"STOP_MOVE\"` | | `\"STOP_MOVED\"` | | `\"SUMMARY\"` | | `\"SUSPENSION\"` | | `\"TRACK_CHANGE\"` | | `\"UNKNOWN_EFFECT\"` |  See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `effect`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert)  

        :return: The effect of this AlertResourceAttributes.
        :rtype: str
        """
        return self._effect

    @effect.setter
    def effect(self, effect):
        """
        Sets the effect of this AlertResourceAttributes.
        The effect of this problem on the affected entity.  | Value | |-------| | `\"ACCESS_ISSUE\"` | | `\"ADDITIONAL_SERVICE\"` | | `\"AMBER_ALERT\"` | | `\"CANCELLATION\"` | | `\"DELAY\"` | | `\"DETOUR\"` | | `\"DOCK_CLOSURE\"` | | `\"DOCK_ISSUE\"` | | `\"EXTRA_SERVICE\"` | | `\"MODIFIED_SERVICE\"` | | `\"NO_SERVICE\"` | | `\"OTHER_EFFECT\"` | | `\"POLICY_CHANGE\"` | | `\"SCHEDULE_CHANGE\"` | | `\"SERVICE_CHANGE\"` | | `\"SHUTTLE\"` | | `\"SNOW_ROUTE\"` | | `\"STATION_CLOSURE\"` | | `\"STATION_ISSUE\"` | | `\"STOP_CLOSURE\"` | | `\"STOP_MOVE\"` | | `\"STOP_MOVED\"` | | `\"SUMMARY\"` | | `\"SUSPENSION\"` | | `\"TRACK_CHANGE\"` | | `\"UNKNOWN_EFFECT\"` |  See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `effect`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert)  

        :param effect: The effect of this AlertResourceAttributes.
        :type: str
        """
        allowed_values = ["ACCESS_ISSUE", "ADDITIONAL_SERVICE", "AMBER_ALERT", "CANCELLATION", "DELAY", "DETOUR", "DOCK_CLOSURE", "DOCK_ISSUE", "EXTRA_SERVICE", "MODIFIED_SERVICE", "NO_SERVICE", "OTHER_EFFECT", "POLICY_CHANGE", "SCHEDULE_CHANGE", "SERVICE_CHANGE", "SHUTTLE", "SNOW_ROUTE", "STATION_CLOSURE", "STATION_ISSUE", "STOP_CLOSURE", "STOP_MOVE", "STOP_MOVED", "SUMMARY", "SUSPENSION", "TRACK_CHANGE", "UNKNOWN_EFFECT"]
        if effect not in allowed_values:
            raise ValueError(
                "Invalid value for `effect` ({0}), must be one of {1}"
                .format(effect, allowed_values)
            )

        self._effect = effect

    @property
    def description(self):
        """
        Gets the description of this AlertResourceAttributes.
        This plain-text string will be formatted as the body of the alert (or shown on an explicit \"expand\" request by the user). The information in the description should add to the information of the header. See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `description_text`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert) 

        :return: The description of this AlertResourceAttributes.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this AlertResourceAttributes.
        This plain-text string will be formatted as the body of the alert (or shown on an explicit \"expand\" request by the user). The information in the description should add to the information of the header. See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `description_text`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert) 

        :param description: The description of this AlertResourceAttributes.
        :type: str
        """

        self._description = description

    @property
    def created_at(self):
        """
        Gets the created_at of this AlertResourceAttributes.
        Date/Time alert created

        :return: The created_at of this AlertResourceAttributes.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this AlertResourceAttributes.
        Date/Time alert created

        :param created_at: The created_at of this AlertResourceAttributes.
        :type: str
        """

        self._created_at = created_at

    @property
    def cause(self):
        """
        Gets the cause of this AlertResourceAttributes.
        What is causing the alert.  | Value | |-------| | `\"ACCIDENT\"` | | `\"AMTRAK\"` | | `\"AN_EARLIER_MECHANICAL_PROBLEM\"` | | `\"AN_EARLIER_SIGNAL_PROBLEM\"` | | `\"AUTOS_IMPEDING_SERVICE\"` | | `\"COAST_GUARD_RESTRICTION\"` | | `\"CONGESTION\"` | | `\"CONSTRUCTION\"` | | `\"CROSSING_MALFUNCTION\"` | | `\"DEMONSTRATION\"` | | `\"DISABLED_BUS\"` | | `\"DISABLED_TRAIN\"` | | `\"ELECTRICAL_WORK\"` | | `\"FIRE\"` | | `\"FOG\"` | | `\"FREIGHT_TRAIN_INTERFERENCE\"` | | `\"HAZMAT_CONDITION\"` | | `\"HEAVY_RIDERSHIP\"` | | `\"HIGH_WINDS\"` | | `\"HOLIDAY\"` | | `\"HURRICANE\"` | | `\"ICE_IN_HARBOR\"` | | `\"MAINTENANCE\"` | | `\"MECHANICAL_PROBLEM\"` | | `\"MEDICAL_EMERGENCY\"` | | `\"OTHER_CAUSE\"` | | `\"POLICE_ACTION\"` | | `\"POLICE_ACTIVITY\"` | | `\"POWER_PROBLEM\"` | | `\"SEVERE_WEATHER\"` | | `\"SIGNAL_PROBLEM\"` | | `\"SLIPPERY_RAIL\"` | | `\"SNOW\"` | | `\"SPECIAL_EVENT\"` | | `\"SPEED_RESTRICTION\"` | | `\"SWITCH_PROBLEM\"` | | `\"TECHNICAL_PROBLEM\"` | | `\"TIE_REPLACEMENT\"` | | `\"TRACK_PROBLEM\"` | | `\"TRACK_WORK\"` | | `\"TRAFFIC\"` | | `\"UNKNOWN_CAUSE\"` | | `\"UNRULY_PASSENGER\"` | | `\"WEATHER\"` |  See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `Cause`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#enum-cause)  

        :return: The cause of this AlertResourceAttributes.
        :rtype: str
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """
        Sets the cause of this AlertResourceAttributes.
        What is causing the alert.  | Value | |-------| | `\"ACCIDENT\"` | | `\"AMTRAK\"` | | `\"AN_EARLIER_MECHANICAL_PROBLEM\"` | | `\"AN_EARLIER_SIGNAL_PROBLEM\"` | | `\"AUTOS_IMPEDING_SERVICE\"` | | `\"COAST_GUARD_RESTRICTION\"` | | `\"CONGESTION\"` | | `\"CONSTRUCTION\"` | | `\"CROSSING_MALFUNCTION\"` | | `\"DEMONSTRATION\"` | | `\"DISABLED_BUS\"` | | `\"DISABLED_TRAIN\"` | | `\"ELECTRICAL_WORK\"` | | `\"FIRE\"` | | `\"FOG\"` | | `\"FREIGHT_TRAIN_INTERFERENCE\"` | | `\"HAZMAT_CONDITION\"` | | `\"HEAVY_RIDERSHIP\"` | | `\"HIGH_WINDS\"` | | `\"HOLIDAY\"` | | `\"HURRICANE\"` | | `\"ICE_IN_HARBOR\"` | | `\"MAINTENANCE\"` | | `\"MECHANICAL_PROBLEM\"` | | `\"MEDICAL_EMERGENCY\"` | | `\"OTHER_CAUSE\"` | | `\"POLICE_ACTION\"` | | `\"POLICE_ACTIVITY\"` | | `\"POWER_PROBLEM\"` | | `\"SEVERE_WEATHER\"` | | `\"SIGNAL_PROBLEM\"` | | `\"SLIPPERY_RAIL\"` | | `\"SNOW\"` | | `\"SPECIAL_EVENT\"` | | `\"SPEED_RESTRICTION\"` | | `\"SWITCH_PROBLEM\"` | | `\"TECHNICAL_PROBLEM\"` | | `\"TIE_REPLACEMENT\"` | | `\"TRACK_PROBLEM\"` | | `\"TRACK_WORK\"` | | `\"TRAFFIC\"` | | `\"UNKNOWN_CAUSE\"` | | `\"UNRULY_PASSENGER\"` | | `\"WEATHER\"` |  See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `Cause`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#enum-cause)  

        :param cause: The cause of this AlertResourceAttributes.
        :type: str
        """
        allowed_values = ["ACCIDENT", "AMTRAK", "AN_EARLIER_MECHANICAL_PROBLEM", "AN_EARLIER_SIGNAL_PROBLEM", "AUTOS_IMPEDING_SERVICE", "COAST_GUARD_RESTRICTION", "CONGESTION", "CONSTRUCTION", "CROSSING_MALFUNCTION", "DEMONSTRATION", "DISABLED_BUS", "DISABLED_TRAIN", "ELECTRICAL_WORK", "FIRE", "FOG", "FREIGHT_TRAIN_INTERFERENCE", "HAZMAT_CONDITION", "HEAVY_RIDERSHIP", "HIGH_WINDS", "HOLIDAY", "HURRICANE", "ICE_IN_HARBOR", "MAINTENANCE", "MECHANICAL_PROBLEM", "MEDICAL_EMERGENCY", "OTHER_CAUSE", "POLICE_ACTION", "POLICE_ACTIVITY", "POWER_PROBLEM", "SEVERE_WEATHER", "SIGNAL_PROBLEM", "SLIPPERY_RAIL", "SNOW", "SPECIAL_EVENT", "SPEED_RESTRICTION", "SWITCH_PROBLEM", "TECHNICAL_PROBLEM", "TIE_REPLACEMENT", "TRACK_PROBLEM", "TRACK_WORK", "TRAFFIC", "UNKNOWN_CAUSE", "UNRULY_PASSENGER", "WEATHER"]
        if cause not in allowed_values:
            raise ValueError(
                "Invalid value for `cause` ({0}), must be one of {1}"
                .format(cause, allowed_values)
            )

        self._cause = cause

    @property
    def banner(self):
        """
        Gets the banner of this AlertResourceAttributes.
        Set if alert is meant to be displayed prominently, such as the top of every page.

        :return: The banner of this AlertResourceAttributes.
        :rtype: str
        """
        return self._banner

    @banner.setter
    def banner(self, banner):
        """
        Sets the banner of this AlertResourceAttributes.
        Set if alert is meant to be displayed prominently, such as the top of every page.

        :param banner: The banner of this AlertResourceAttributes.
        :type: str
        """

        self._banner = banner

    @property
    def active_period(self):
        """
        Gets the active_period of this AlertResourceAttributes.
        Date/Time ranges when alert is active. See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `active_period`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert). 

        :return: The active_period of this AlertResourceAttributes.
        :rtype: list[ActivePeriod]
        """
        return self._active_period

    @active_period.setter
    def active_period(self, active_period):
        """
        Sets the active_period of this AlertResourceAttributes.
        Date/Time ranges when alert is active. See [GTFS Realtime `FeedMessage` `FeedEntity` `Alert` `active_period`](https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-alert). 

        :param active_period: The active_period of this AlertResourceAttributes.
        :type: list[ActivePeriod]
        """

        self._active_period = active_period

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, AlertResourceAttributes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
